name: CI

on:
  push:
    branches:
      - main
      - development
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ["25"]
        elixir: ["1.14.4"]
    env:
      MIX_ENV: test
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            coveralls.io:443
            github.com:443
            repo.hex.pm:443

      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c

      - uses: erlef/setup-beam@e3f6ffe2878180f57318bf13febd3933ee81f664
        id: beam
        with:
          otp-version: "25"
          elixir-version: "1.14.4"

      - uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install Dependencies
        run: mix deps.get

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo --strict

      - name: Restore PLT cache
        uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920
        id: plt_cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts

      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --format short

      - name: Run Tests and Coverage
        run: mix coveralls.github --parallel --flagname otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
