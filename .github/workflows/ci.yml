name: CI

on:
  push:
    branches:
      - main
      - development
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: read

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ["25"]
        elixir: ["1.14.4"]
    env:
      MIX_ENV: test
      TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
      GUARDIAN_KEY: ${{ secrets.GUARDIAN_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: habit_hero_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check vulnerabilities
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            coveralls.io:443
            github.com:443
            repo.hex.pm:443

      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: "25"
          elixir-version: "1.14.4"

      - uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install Dependencies
        run: mix deps.get

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Run Credo
        run: mix credo --strict

      - name: Restore PLT cache
        uses: actions/cache@v4
        id: plt_cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts

      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --format short

      - name: Run Tests and Coverage
        run: mix coveralls.github --parallel --flagname otp-${{ matrix.otp }}-elixir-${{ matrix.elixir }}
        env:
          DB_HOST: localhost
          DB_TEST_DATABASE: habit_hero_test
          DB_USER: postgres
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
